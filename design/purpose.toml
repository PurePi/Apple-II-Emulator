[REQ-BASIC]
partof = 'REQ-software'
text = 'After bootup the emulator must boot into a BASIC shell if no bootable software is loaded into disc drive A.'

[REQ-CPU]
partof = 'REQ-purpose'
text = 'The emulator must execute instructions according to the 6502 instruction set.'

[REQ-bootup]
partof = 'REQ-software'
text = 'Once the emulator and its components have been initialized, it will begin executing code to emulate the autostart ROM reset cycle.'

[REQ-display]
text = 'The emulator must provide a display similar to that of the original Apple ][.'

[REQ-memory]
partof = 'REQ-purpose'
text = 'The emulator must provide main RAM.'

[REQ-purpose]
text = 'This emulator will provide the functionality of the original Apple ][ by executing the 6502 instruction set and interacting with emulated hardware.'

[REQ-software]
partof = 'REQ-purpose'
text = 'The emulator must have software to run at bootup and in case none is provided by the user.'

[SPC-CPU]
text = 'The main thread, after starting all other threads, will execute 6502 instructions until the emulator is shut down. It will interface with the other components through the main memory. The registers and related data will be stored as variables and it will merely execute the instructions without emulating implementations of the original microprocessor like pipelining.'

[SPC-bootup]
text = '''The reset cycle will first check if it is a cold or warm reset. If it's warm, it will clear the screen. It will then check for bootable software loaded into disc drive A, and if none is found, it will jump into the BASIC shell.'''

[SPC-display]
text = 'The original Apple ][ supported a 280x192 display. This emulator will inflate the size of the pixels and use a 560x384 window for the main display. It will be controlled through memory-mapped IO in the same way as it would be in the original computer.'

[SPC-memory]
text = '''The emulator's memory will simply be a 64KB array of bytes. All components of the computer communicate through memory-mapped IO, so it will be globally available.'''
